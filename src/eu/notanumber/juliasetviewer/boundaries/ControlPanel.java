/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eu.notanumber.juliasetviewer.boundaries;

import java.util.Collections;
import eu.notanumber.juliasetviewer.tools.Globals;
import java.util.List;
import java.util.Locale;
import javax.swing.AbstractButton;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import eu.notanumber.juliasetviewer.control.JuliaSetController;

/**
 * This class extends swing Panel and provides controls to the Julia set
 *
 * @author Bruno K
 */
public class ControlPanel extends javax.swing.JPanel implements JuliaSetControlInterface {

    private JuliaSetController juliaManager;
    private SpinnerNumberModel spinnerNumberModelOffsetX = new SpinnerNumberModel(0.0, -1.0, 1.0, 0.001);
    private SpinnerNumberModel spinnerNumberModelOffsetY = new SpinnerNumberModel(0.0, -1.0, 1.0, 0.001);

    /**
     * Creates new form ControlPanel
     */
    public ControlPanel() {

        initComponents();

        Locale.setDefault(Locale.Category.FORMAT, Locale.US);

        jSpinnerA.setModel(new SpinnerNumberModel(0.0, -1.0, 1.0, 0.001));
        jSpinnerB.setModel(new SpinnerNumberModel(0.0, -1.0, 1.0, 0.001));
        jSpinnerOffsetX.setModel(spinnerNumberModelOffsetX);
        jSpinnerOffsetY.setModel(spinnerNumberModelOffsetY);
        jSpinnerA.setEditor(new JSpinner.NumberEditor(jSpinnerA, "0.00000000"));
        jSpinnerB.setEditor(new JSpinner.NumberEditor(jSpinnerB, "0.00000000"));
        jSpinnerOffsetX.setEditor(new JSpinner.NumberEditor(jSpinnerOffsetX, "0.00000000"));
        jSpinnerOffsetY.setEditor(new JSpinner.NumberEditor(jSpinnerOffsetY, "0.00000000"));
        jComboBoxColors.setModel(new DefaultColorsModel());
    }

    /**
     * Retrieve AbstractButton from a int value
     *
     * @param curve int index of button
     * @return AbstractButton
     */
    private AbstractButton getCurrentCurveButton(int curve) {
        int index;
        switch (curve) {
            case Globals.CURVENONE:
                index = 0;
                break;
            case Globals.CURVESINUS:
                index = 1;
                break;
            case Globals.CURVECOSINUS:
                index = 2;
                break;
            default:
                index = 0;
                break;
        }
        List<AbstractButton> list = Collections.list(buttonGroupCurve.getElements());
        return list.get(index);
    }

    public void setJuliaManager(JuliaSetController juliaManager) {
        this.juliaManager = juliaManager;
    }

    /**
     * This method sets SpinnerNumberModel from a zoom factor. It's used by the
     * two's offset spinners and provides an adaptive step increment according
     * to the zoom.
     *
     * @param zoom int value of zoom, currently from 0 to 60
     */
    private void setOffsetModelFromZoom(int zoom) {
        double spinnerIncrement = .1 / Math.pow(10, (double) zoom / 10);
        double valueX = (double) jSpinnerOffsetX.getValue();
        double valueY = (double) jSpinnerOffsetY.getValue();
        jSpinnerOffsetX.setModel(new SpinnerNumberModel(valueX, -1.0, 1.0, spinnerIncrement));
        jSpinnerOffsetY.setModel(new SpinnerNumberModel(valueY, -1.0, 1.0, spinnerIncrement));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCurve = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSpinnerIterations = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerA = new javax.swing.JSpinner();
        jSpinnerB = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jSliderZoom = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxColors = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerOffsetX = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jSpinnerOffsetY = new javax.swing.JSpinner();

        setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.gray));
        setPreferredSize(new java.awt.Dimension(280, 449));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(158, 140));

        jSpinnerIterations.setModel(new javax.swing.SpinnerNumberModel(1024, 1, 2048, 1));
        jSpinnerIterations.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerIterationsStateChanged(evt);
            }
        });

        jLabel1.setText("iterations");

        jLabel2.setText("a");

        jLabel3.setText("b");

        jSpinnerA.setModel(new javax.swing.SpinnerNumberModel(0.0d, -1.0d, 1.0d, 1.0d));
        jSpinnerA.setMaximumSize(new java.awt.Dimension(118, 22));
        jSpinnerA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerAStateChanged(evt);
            }
        });

        jSpinnerB.setMaximumSize(new java.awt.Dimension(118, 22));
        jSpinnerB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerBStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSpinnerIterations, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(0, 47, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerIterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinnerB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(366, 366, 366))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jSliderZoom.setMaximum(60);
        jSliderZoom.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderZoom.setValue(0);
        jSliderZoom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderZoomStateChanged(evt);
            }
        });

        jLabel4.setText("zoom");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jSliderZoom, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderZoom, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setText("output curve");

        buttonGroupCurve.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("none");
        jRadioButton1.setActionCommand(String.valueOf(Globals.CURVENONE));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroupCurve.add(jRadioButton2);
        jRadioButton2.setText("sinus");
        jRadioButton2.setActionCommand(String.valueOf(Globals.CURVESINUS));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroupCurve.add(jRadioButton3);
        jRadioButton3.setText("cosinus");
        jRadioButton3.setActionCommand(String.valueOf(Globals.CURVECOSINUS));
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("color");

        jComboBoxColors.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxColors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxColorsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxColors, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jRadioButton3))
                                .addComponent(jLabel7))
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxColors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("offset X");

        jSpinnerOffsetX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerOffsetXStateChanged(evt);
            }
        });

        jLabel8.setText("offset Y");

        jSpinnerOffsetY.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerOffsetYStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerOffsetX)
                    .addComponent(jSpinnerOffsetY))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jSpinnerOffsetX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jSpinnerOffsetY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        setCurveOutput(Globals.CURVENONE);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        setCurveOutput(Globals.CURVESINUS);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        setCurveOutput(Globals.CURVECOSINUS);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jSliderZoomStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderZoomStateChanged
        setZoom(jSliderZoom.getValue());
    }//GEN-LAST:event_jSliderZoomStateChanged

    private void jComboBoxColorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxColorsActionPerformed
        setColorRange(jComboBoxColors.getSelectedIndex());
    }//GEN-LAST:event_jComboBoxColorsActionPerformed

    private void jSpinnerBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerBStateChanged
        setB((double) jSpinnerB.getModel().getValue());
    }//GEN-LAST:event_jSpinnerBStateChanged

    private void jSpinnerAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerAStateChanged
        setA((double) jSpinnerA.getModel().getValue());
    }//GEN-LAST:event_jSpinnerAStateChanged

    private void jSpinnerIterationsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerIterationsStateChanged
        setIterations((int) jSpinnerIterations.getValue());
    }//GEN-LAST:event_jSpinnerIterationsStateChanged

    private void jSpinnerOffsetXStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerOffsetXStateChanged
        setOffsetX((double) jSpinnerOffsetX.getValue());
    }//GEN-LAST:event_jSpinnerOffsetXStateChanged

    private void jSpinnerOffsetYStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerOffsetYStateChanged
        setOffsetY((double) jSpinnerOffsetY.getValue());
    }//GEN-LAST:event_jSpinnerOffsetYStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCurve;
    private javax.swing.JComboBox<String> jComboBoxColors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JSlider jSliderZoom;
    private javax.swing.JSpinner jSpinnerA;
    private javax.swing.JSpinner jSpinnerB;
    private javax.swing.JSpinner jSpinnerIterations;
    private javax.swing.JSpinner jSpinnerOffsetX;
    private javax.swing.JSpinner jSpinnerOffsetY;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setIterations(int value) {
        juliaManager.stopDrawThread();
        Globals.getjSet().setIteration(value);
        juliaManager.startDrawing();
    }

    @Override
    public void setA(double a) {
        juliaManager.stopDrawThread();
        Globals.getjSet().getC().setA(a);
        juliaManager.startDrawing();
    }

    @Override
    public void setB(double b) {
        juliaManager.stopDrawThread();
        Globals.getjSet().getC().setB(b);
        juliaManager.startDrawing();
    }

    @Override
    public void setZoom(int zoom) {
        if (Globals.getjSet().getZoom() != zoom) {
            juliaManager.stopDrawThread();
            Globals.getjSet().setZoom(zoom);

            setOffsetModelFromZoom(zoom);   // set offset sliders models from zoom factor

            juliaManager.startDrawing();
        }
    }

    @Override
    public void setOffsetX(double offsetX) {
        juliaManager.stopDrawThread();
        Globals.getjSet().setOffsetX(offsetX);
        juliaManager.startDrawing();
    }

    @Override
    public void setOffsetY(double offsetY) {
        juliaManager.stopDrawThread();
        Globals.getjSet().setOffsetY(offsetY);
        juliaManager.startDrawing();
    }

    @Override
    public void setCurveOutput(int curveIndex) {
        juliaManager.stopDrawThread();
        Globals.getjSet().setOutputCurve(curveIndex);
        juliaManager.startDrawing();
    }

    @Override
    public void setColorRange(int colorIndex) {
        if (juliaManager != null) {
            juliaManager.stopDrawThread();
            Globals.getjSet().setColorRange(colorIndex);
            juliaManager.startDrawing();
        } else {
            Globals.getjSet().setColorRange(0);
        }
    }

    @Override
    public void updateJuliaSetBoundary() {
        jSpinnerIterations.setValue(Globals.getjSet().getIteration());
        jSpinnerA.setValue(Globals.getjSet().getC().getA());
        jSpinnerB.setValue(Globals.getjSet().getC().getB());
        jSliderZoom.setValue(Globals.getjSet().getZoom());
        jSpinnerOffsetX.setValue(Globals.getjSet().getOffsetX());
        jSpinnerOffsetY.setValue(Globals.getjSet().getOffsetY());
        setOffsetModelFromZoom(Globals.getjSet().getZoom());
        buttonGroupCurve.setSelected(getCurrentCurveButton(Globals.getjSet().getOutputCurve()).getModel(), true);
        jComboBoxColors.setSelectedIndex(Globals.getjSet().getColorRange());
    }
}
